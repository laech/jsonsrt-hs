name: Build

on:
  push:
    branches: ["main"]
  pull_request:
    branches: ["main"]

permissions:
  contents: read

jobs:
  build:
    strategy:
      matrix:
        os: [ubuntu-latest, windows-latest, macos-latest]
    runs-on: ${{ matrix.os }}
    steps:
      - uses: actions/checkout@v3
      - uses: haskell/actions/setup@v2
        id: setup
        with:
          ghc-version: 9.2.7

      - run: cabal configure --enable-tests --enable-benchmarks --disable-documentation
      - run: cabal build --dry-run
      - uses: actions/cache/restore@v3
        id: cache
        env:
          key: ${{ runner.os }}-ghc-${{ steps.setup.outputs.ghc-version }}-cabal-${{ steps.setup.outputs.cabal-version }}
        with:
          path: ${{ steps.setup.outputs.cabal-store }}
          key: ${{ env.key }}-plan-${{ hashFiles('**/plan.json') }}
          restore-keys: ${{ env.key }}-

      - run: cabal build all --only-dependencies
      - uses: actions/cache/save@v3
        if: ${{ steps.cache.outputs.cache-primary-key != steps.cache.outputs.cache-matched-key }}
        with:
          path: ${{ steps.setup.outputs.cabal-store }}
          key: ${{ steps.cache.outputs.cache-primary-key }}

      - run: cabal install all --install-method copy --installdir .
      - run: cabal install hspec-discover
      - run: cabal test all
      - uses: actions/upload-artifact@v3
        with:
          if-no-files-found: error
          name: jsonsrt-${{ runner.os }}-${{ runner.arch }}
          path: |
            jsonsrt
            jsonsrt.exe

  prerelease:
    needs: [build]
    permissions:
      contents: write
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/main'

    steps:
      - uses: actions/download-artifact@v3
      - run: |
          mv -v jsonsrt-Linux-X64/jsonsrt jsonsrt-linux-x64
          mv -v jsonsrt-macOS-X64/jsonsrt jsonsrt-macos-x64
          mv -v jsonsrt-Windows-X64/jsonsrt.exe jsonsrt-windows-x64.exe

      - uses: softprops/action-gh-release@v1
        with:
          name: jsonsrt-head
          tag_name: "jsonsrt-head"
          prerelease: true
          fail_on_unmatched_files: true
          files: |
            jsonsrt-*
